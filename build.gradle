buildscript {
    repositories {
        jcenter()
        maven { url = "https://repo.spongepowered.org/repository/maven-public" }
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

version = "1.0.4"
group= "coolclk.faker"
archivesBaseName = "faker"

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"

    mappings = "stable_22"
    makeObfSourceJar = false
}

repositories {
    maven { url = "https://maven.minecraftforge.net" }
    mavenCentral()
    maven { url = "https://libraries.minecraft.net" }
    mavenLocal()

    maven { url = "https://repo.spongepowered.org/repository/maven-public" }
}

configurations {
    include
    compile.extendsFrom(include)
}

dependencies {
    include('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        transitive = false
        exclude module: "guava"
        exclude module: "commons-io"
        exclude module: "gson"
        exclude module: "launchwrapper"
        exclude module: "log4j-core"
        exclude module: "slf4j-api"
    }

    annotationProcessor 'org.spongepowered:mixin:0.7.11-SNAPSHOT'

    compile 'org.reflections:reflections:0.10.2'
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    baseName = baseName + "-" + minecraft.version

    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    manifest.attributes([
            'FMLCorePlugin': 'coolclk.faker.injection.MixinLoader',
            'FMLCorePluginContainsFMLMod': 'true',
            'ForceLoadAsMod': 'true',
            'MixinConfigs': 'mixins.faker.json',
            'ModSide': 'CLIENT',
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'TweakOrder': '0'
    ])
}

sourceSets {
    main {
        output.resourcesDir = file('build/combined')
        java.outputDir = file('build/combined')
    }
}

mixin {
    disableRefMapWarning = true
    defaultObfuscationEnv searge
    add sourceSets.main, "mixins.faker.refmap.json"
}